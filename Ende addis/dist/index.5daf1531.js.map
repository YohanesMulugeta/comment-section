{"mappings":"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","sources":["src/model.js","src/view.js","src/commentView.js","src/commentField.js","src/scoreUpdate.js","src/edit.js","src/deleteComment.js","index.js","src/reply.js"],"sourcesContent":["// console.log(\"i am working\");\r\nexport const state = {\r\n  currentUser: {\r\n    image: {\r\n      png: \"./images/avatars/image-juliusomo.png\",\r\n      webp: \"./images/avatars/image-juliusomo.webp\",\r\n    },\r\n    username: \"juliusomo\",\r\n  },\r\n  comments: [\r\n    {\r\n      id: 1,\r\n      content:\r\n        \"Impressive! Though it seems the drag feature could be improved. But overall it looks incredible. You've nailed the design and the responsiveness at various breakpoints works really well.\",\r\n      createdAt: \"1 month ago\",\r\n      score: 12,\r\n      user: {\r\n        image: {\r\n          png: \"./images/avatars/image-amyrobson.png\",\r\n          webp: \"./images/avatars/image-amyrobson.webp\",\r\n        },\r\n        username: \"amyrobson\",\r\n      },\r\n      replies: [],\r\n    },\r\n    {\r\n      id: 2,\r\n      content:\r\n        \"Woah, your project looks awesome! How long have you been coding for? I'm still new, but think I want to dive into React as well soon. Perhaps you can give me an insight on where I can learn React? Thanks!\",\r\n      createdAt: \"2 weeks ago\",\r\n      score: 5,\r\n      user: {\r\n        image: {\r\n          png: \"./images/avatars/image-maxblagun.png\",\r\n          webp: \"./images/avatars/image-maxblagun.webp\",\r\n        },\r\n        username: \"maxblagun\",\r\n      },\r\n      replies: [\r\n        {\r\n          id: \"2-1\",\r\n          content:\r\n            \"If you're still new, I'd recommend focusing on the fundamentals of HTML, CSS, and JS before considering React. It's very tempting to jump ahead but lay a solid foundation first.\",\r\n          createdAt: \"1 week ago\",\r\n          score: 7,\r\n          replyingTo: \"maxblagun\",\r\n          user: {\r\n            image: {\r\n              png: \"./images/avatars/image-ramsesmiron.png\",\r\n              webp: \"./images/avatars/image-ramsesmiron.webp\",\r\n            },\r\n            username: \"ramsesmiron\",\r\n          },\r\n        },\r\n        {\r\n          id: \"2-2\",\r\n          content:\r\n            \"I couldn't agree more with this. Everything moves so fast and it always seems like everyone knows the newest library/framework. But the fundamentals are what stay constant.\",\r\n          createdAt: \"2 days ago\",\r\n          score: 2,\r\n          replyingTo: \"ramsesmiron\",\r\n          user: {\r\n            image: {\r\n              png: \"./images/avatars/image-juliusomo.png\",\r\n              webp: \"./images/avatars/image-juliusomo.webp\",\r\n            },\r\n            username: \"juliusomo\",\r\n          },\r\n        },\r\n      ],\r\n    },\r\n  ],\r\n};\r\n\r\n// ====================================== LOCAL-STORAGE persist ======================================\r\n\r\nconst persistState = function () {\r\n  localStorage.setItem(\"state\", JSON.stringify(state));\r\n};\r\n\r\n/* ==================================================== score Updater ============================== */\r\n\r\nexport const scoreUpdate = function (id, add = true) {\r\n  const parentIndex = state.comments.findIndex((el) => el.id === parseInt(id));\r\n  if (+id) {\r\n    // console.log(add);\r\n    if (add) state.comments[parentIndex].score++;\r\n    else state.comments[parentIndex].score--;\r\n\r\n    // persisting the updated state\r\n    persistState();\r\n\r\n    return state.comments[parentIndex].score;\r\n  }\r\n  // const parentId = state.comments[parentIndex].id;\r\n  const repliesIndex = state.comments[parentIndex].replies.findIndex(\r\n    (el) => el.id === id\r\n  );\r\n\r\n  // console.log(repliesIndex, id);\r\n  if (add) state.comments[parentIndex].replies[repliesIndex].score++;\r\n  else state.comments[parentIndex].replies[repliesIndex].score--;\r\n\r\n  // persisting the updated state\r\n  persistState();\r\n  return state.comments[parentIndex].replies[repliesIndex].score;\r\n};\r\n\r\n/*======================================================== Index finder =========================================*/\r\n\r\nexport const indexFinder = function (array, id) {\r\n  const index = array.findIndex((el) => el.id === id);\r\n  return index;\r\n};\r\n\r\n/*======================================================== Data-provider ======================================*/\r\nexport const dataProvide = function (id) {\r\n  const idP = parseInt(id);\r\n  const indP = indexFinder(state.comments, +idP);\r\n\r\n  //                                                              isInRPLIES\r\n  if (!+id) {\r\n    const indR = indexFinder(state.comments[indP].replies, id); // INDEX of repled\r\n    const data = state.comments[indP].replies[indR]; // DATA of replied\r\n\r\n    return data;\r\n  }\r\n\r\n  return state.comments[indP];\r\n};\r\n\r\n/*======================================================== comment-update ===========================================*/\r\nexport const contentUpdate = function (id, content) {\r\n  const idP = parseInt(id);\r\n  const indP = indexFinder(state.comments, +idP);\r\n\r\n  //                                                              isInRPLIES\r\n  if (!+id) {\r\n    const indR = indexFinder(state.comments[indP].replies, id); // INDEX of repiled\r\n\r\n    state.comments[indP].replies[indR].content = content; // UPDATING the content\r\n\r\n    persistState();\r\n\r\n    //                                                        ASURING CONTROLLED DATA MOVMENT\r\n    return state.comments[indP].replies[indR].content; // UPDATING the content\r\n  }\r\n\r\n  state.comments[indP].content = content;\r\n  persistState();\r\n\r\n  //                                                        ASURING CONTROLLED DATA MOVMENT\r\n  return state.comments[indP].content;\r\n};\r\n\r\n/*======================================================== DATA-PUSHER ============================================*/\r\nexport const dataPush = function (data, id) {\r\n  // normal COMMENT\r\n\r\n  if (+id) {\r\n    state.comments.push(data);\r\n    persistState();\r\n\r\n    return state.comments[-1];\r\n  }\r\n\r\n  // REPLIED data\r\n  const idP = parseInt(id);\r\n  const indP = indexFinder(state.comments, idP);\r\n\r\n  // console.log(indP);\r\n  state.comments[indP].replies.push(data);\r\n\r\n  persistState();\r\n  return state.comments[indP].replies[-1];\r\n};\r\n\r\n/*======================================================== DELETE COMMENT ========================================*/\r\nexport const deleteComment = function (id) {\r\n  if (+id) {\r\n    state.comments.splice(indexFinder(state.comments, id));\r\n    persistState();\r\n  }\r\n\r\n  if (!+id) {\r\n    const idP = parseInt(id);\r\n    const indP = indexFinder(state.comments, idP);\r\n    const indR = indexFinder(state.comments[indP].replies, id);\r\n\r\n    console.log(state.comments[indP].replies.splice(indR));\r\n    persistState();\r\n  }\r\n};\r\n/*========================================================  INITIALIZER function ==================================*/\r\n\r\n// localStorage.clear(\"state\");\r\n\r\nconst init = function () {\r\n  const newState = JSON.parse(localStorage.getItem(\"state\"));\r\n\r\n  if (newState) {\r\n    state.comments = newState.comments;\r\n    state.currentUser = newState.currentUser;\r\n  }\r\n};\r\n\r\ninit();\r\n","export class View {\r\n  _data;\r\n  _parentElement;\r\n\r\n  render(data, parentElId, replies = false, byCurret) {\r\n    this._data = data;\r\n\r\n    // generating the markup\r\n    const markup = this._generateMarkup(replies, byCurret);\r\n\r\n    // This will allow us to OVERIDE any parent setting made before rendering\r\n    if (parentElId) this.parentSet(parentElId);\r\n    // RENDERING the replied markup to the dom\r\n    this._parentElement.insertAdjacentHTML(\"beforeend\", markup);\r\n\r\n    if (byCurret) {\r\n      const thisComment = document.getElementById(this._data.id);\r\n      const deleteEditConta = thisComment.querySelector(\r\n        \".delete-edit-container\"\r\n      );\r\n\r\n      setTimeout(() => {\r\n        deleteEditConta.remove();\r\n        thisComment\r\n          .querySelector(\".comment-btn-container\")\r\n          .insertAdjacentHTML(\"beforeend\", this.reply);\r\n      }, 300000);\r\n    }\r\n\r\n    if (this._data.replies && this._data.replies.length >= 1) {\r\n      this.repliedContainerSetter(this._data.id + \"RC\");\r\n      // RENDERING the replied container\r\n      // this._parentElement.insertAdjacentHTML(\r\n      //   \"beforeend\",\r\n      //   this.repliedContainer\r\n      // );\r\n\r\n      // RENDERING each REPLIED message\r\n      this._data.replies.forEach((reply) => {\r\n        this.render(reply, parseInt(this._data.id) + \"RC\", true);\r\n      });\r\n    }\r\n  }\r\n\r\n  parentSet(id) {\r\n    this._parentElement = document.getElementById(id);\r\n  }\r\n}\r\n","import { TIMEOUT_SECONDS } from \"../../../../Java Script/complete-javascript-course-master/18-forkify/starter/src/js/config.js\";\r\nimport { View } from \"./view.js\";\r\n\r\nclass CommentView extends View {\r\n  deleteEdit = `\r\n        <div class=\"delete-edit-container flex\">\r\n          <div class=\"delete-container flex\">\r\n            <svg width=\"12\" height=\"14\" xmlns=\"http://www.w3.org/2000/svg\">\r\n              <path\r\n                d=\"M1.167 12.448c0 .854.7 1.552 1.555 1.552h6.222c.856 0 1.556-.698 1.556-1.552V3.5H1.167v8.948Zm10.5-11.281H8.75L7.773 0h-3.88l-.976 1.167H0v1.166h11.667V1.167Z\"\r\n                fill=\"#ED6368\"\r\n              />\r\n            </svg>\r\n\r\n            <label for=\"#delete\" class=\"delete\">Delete</label>\r\n          </div>\r\n\r\n          <div class=\"edit-container flex\">\r\n            <svg width=\"14\" height=\"14\" xmlns=\"http://www.w3.org/2000/svg\">\r\n              <path\r\n                d=\"M13.479 2.872 11.08.474a1.75 1.75 0 0 0-2.327-.06L.879 8.287a1.75 1.75 0 0 0-.5 1.06l-.375 3.648a.875.875 0 0 0 .875.954h.078l3.65-.333c.399-.04.773-.216 1.058-.499l7.875-7.875a1.68 1.68 0 0 0-.061-2.371Zm-2.975 2.923L8.159 3.449 9.865 1.7l2.389 2.39-1.75 1.706Z\"\r\n                fill=\"#5357B6\"\r\n              />\r\n            </svg>\r\n\r\n            <label for=\"#edit\" class=\"edit\">Edit</label>\r\n          </div>\r\n        </div>\r\n  `;\r\n\r\n  reply = `\r\n      <div class=\"reply-container flex\">\r\n        <svg width=\"14\" height=\"13\" xmlns=\"http://www.w3.org/2000/svg\">\r\n          <path\r\n            d=\"M.227 4.316 5.04.16a.657.657 0 0 1 1.085.497v2.189c4.392.05 7.875.93 7.875 5.093 0 1.68-1.082 3.344-2.279 4.214-.373.272-.905-.07-.767-.51 1.24-3.964-.588-5.017-4.829-5.078v2.404c0 .566-.664.86-1.085.496L.227 5.31a.657.657 0 0 1 0-.993Z\"\r\n            fill=\"#5357B6\"\r\n          />\r\n        </svg>\r\n\r\n        <label for=\"#reply\" class=\"reply\">Reply</label>\r\n    </div>\r\n    \r\n  `;\r\n  repliedContainer;\r\n  /////////////////////////////////////////////////////             MARKUP GENERATOR\r\n  ////////////////////////////////\r\n  _generateMarkup(replied, byCurret) {\r\n    // Setting the apropriate parent element\r\n    if (!replied) {\r\n      this._parentElement = document.querySelector(\".comment-card-container\");\r\n      // console.log(document.querySelector(\".comment-card-container\"));\r\n    } else {\r\n      this._parentElement = document.querySelector(\".replied-container\");\r\n    }\r\n\r\n    // console.log(this._data);\r\n    return `\r\n     <div class=\"comment-card grid grid--2-cols\" id = \"${\r\n       this._data.id\r\n     }\" data-id = \"${this._data.id}\">\r\n      <div class=\"avatar-container flex\">\r\n        <img\r\n          class=\"img-avatar\"\r\n          src=\"${this._data.user.image.webp}\"\r\n          alt=\"photo of ${this._data.user.username}\"\r\n        />\r\n        <p class=\"user-name\">${this._data.user.username}</p>\r\n        <p class=\"comment-time\">${this._data.createdAt}</p>\r\n      </div>\r\n\r\n      <div class=\"comment-container\">\r\n        <p class=\"comment\">\r\n\r\n          ${\r\n            replied\r\n              ? \"<span class='replying-to'>@\" +\r\n                this._data.replyingTo +\r\n                \"</span> \" +\r\n                this._data.content\r\n              : this._data.content\r\n          }\r\n        </p>\r\n      </div>\r\n\r\n      <!-- //////////////////////////////////////////////////////////         comment SCORE -->\r\n\r\n      <div class=\"score-container flex\">\r\n        <button class=\"btn btn-score plus flex\">\r\n          <svg width=\"11\" height=\"11\" xmlns=\"http://www.w3.org/2000/svg\">\r\n            <path\r\n              d=\"M6.33 10.896c.137 0 .255-.05.354-.149.1-.1.149-.217.149-.354V7.004h3.315c.136 0 .254-.05.354-.149.099-.1.148-.217.148-.354V5.272a.483.483 0 0 0-.148-.354.483.483 0 0 0-.354-.149H6.833V1.4a.483.483 0 0 0-.149-.354.483.483 0 0 0-.354-.149H4.915a.483.483 0 0 0-.354.149c-.1.1-.149.217-.149.354v3.37H1.08a.483.483 0 0 0-.354.15c-.1.099-.149.217-.149.353v1.23c0 .136.05.254.149.353.1.1.217.149.354.149h3.333v3.39c0 .136.05.254.15.353.098.1.216.149.353.149H6.33Z\"\r\n              fill=\"hsl(211, 10%, 45%)\"\r\n            />\r\n          </svg>\r\n        </button>\r\n\r\n        <p class=\"score\">${this._data.score}</p>\r\n\r\n        <button class=\"btn btn-score minus flex\">\r\n          <svg width=\"11\" height=\"3\" xmlns=\"http://www.w3.org/2000/svg\">\r\n            <path\r\n              d=\"M9.256 2.66c.204 0 .38-.056.53-.167.148-.11.222-.243.222-.396V.722c0-.152-.074-.284-.223-.395a.859.859 0 0 0-.53-.167H.76a.859.859 0 0 0-.53.167C.083.437.009.57.009.722v1.375c0 .153.074.285.223.396a.859.859 0 0 0 .53.167h8.495Z\"\r\n              fill=\"hsl(211, 10%, 45%)\"\r\n            />\r\n          </svg>\r\n        </button>\r\n      </div>\r\n\r\n      <!-- //////////////////////////////////////////////////////               REPLY PART -->\r\n      <!-- ////////////////////////////////////////////////////// -->\r\n      <div class =\"comment-btn-container\">\r\n         ${byCurret ? this.deleteEdit : this.reply}\r\n      </div>\r\n    </div>\r\n    `;\r\n  }\r\n\r\n  ////////////////////////////////////////////////              PARENT ELEMENT SETER\r\n  ////////////////////////////////////////////////\r\n\r\n  repliedContainerSetter(parentElId) {\r\n    const rc = document.createElement(\"div\");\r\n\r\n    // `<div class=\"replied-container flex\" id = \"${id}\" data-id = \"${id}\"></div>`;\r\n    rc.classList.add(\"replied-container\");\r\n    rc.classList.add(\"flex\");\r\n\r\n    rc.id = rc.dataset.id = parentElId;\r\n\r\n    document.getElementById(parseInt(parentElId)).after(rc);\r\n\r\n    this.parentSet(parentElId);\r\n    // this.repliedContainer = `<div class=\"replied-container flex\" id = \"${id}\" data-id = \"${id}\"></div>`;\r\n  }\r\n\r\n  init(data) {\r\n    data.forEach((comment) => {\r\n      this.render(comment);\r\n    });\r\n  }\r\n  // set parentElement(element) {\r\n  //   this._paretnElement = element;\r\n  // }\r\n}\r\n\r\nconst commentView = new CommentView();\r\nexport default commentView;\r\n","import { View } from \"./view.js\";\r\n\r\nclass CommentField extends View {\r\n  _parentElement = document.querySelector(\".comment-section \");\r\n  _btnSend;\r\n\r\n  /* ================================================== the RENDER METHOD ========================================= */\r\n\r\n  render(data, rcIdcId, sendHandler, haveReplies = true) {\r\n    // getting the ParentElId and the Comment replying to id\r\n    const [parentElId, cId] = rcIdcId ? rcIdcId.split(\"to\") : [null, null];\r\n\r\n    const commentFieldContainer = document.querySelector(\r\n      \".section-comment-send\"\r\n    );\r\n\r\n    if (parentElId && !haveReplies) {\r\n      /* ======================================= this CREATES the REPLIED-CONTAINER in the dom ===================== */\r\n      const rc = document.createElement(\"div\");\r\n\r\n      // `<div class=\"replied-container flex\" id = \"${id}\" data-id = \"${id}\"></div>`;\r\n      rc.classList.add(\"replied-container\");\r\n      rc.classList.add(\"flex\");\r\n\r\n      rc.id = rc.dataset.id = parentElId;\r\n\r\n      document.getElementById(parseInt(parentElId)).after(rc);\r\n\r\n      // rc.scrollIntoView({ behavior: \"smooth\" });\r\n\r\n      this.parentSet(parentElId);\r\n    }\r\n\r\n    if (parentElId && haveReplies) {\r\n      this.parentSet(parentElId);\r\n\r\n      this._parentElement.lastElementChild.scrollIntoView({\r\n        behavior: \"smooth\",\r\n      });\r\n    }\r\n    // console.log(this._parentElement);\r\n    this._data = data;\r\n\r\n    if (\r\n      commentFieldContainer?.parentElement.classList.contains(\r\n        \"replied-container\"\r\n      ) &&\r\n      !commentFieldContainer.parentElement.querySelector(\".comment-card\")\r\n    ) {\r\n      const nullConta = commentFieldContainer.parentElement;\r\n\r\n      // console.log();\r\n      commentFieldContainer.remove();\r\n      nullConta.remove();\r\n    }\r\n    // REMOVING THE ALREADY EXISTED COMMENT FIELD\r\n    commentFieldContainer?.remove();\r\n\r\n    // generating the markup\r\n    const markup = this._generateMarkup();\r\n\r\n    // OVERIDING ANY ParentElement settings if no id is provided\r\n    if (!rcIdcId)\r\n      this._parentElement = document.querySelector(\".comment-section \");\r\n\r\n    // RENDERING the replied markup to the dom\r\n    this._parentElement.insertAdjacentHTML(\"beforeend\", markup);\r\n    // console.log(document.getElementById(parentElId));\r\n\r\n    // document.querySelector(\".section-comment-send\");\r\n    // .scrollIntoView({ behavior: \"smooth\" });\r\n\r\n    // calling the eventListner initializer with the event handler\r\n    this.events(sendHandler, cId);\r\n  }\r\n\r\n  //  ====================================================== MARKUP GENERATOR =========================================\r\n\r\n  _generateMarkup() {\r\n    return `\r\n    <section class=\"section-comment-send grid grid--2-cols\">\r\n        <form action=\"submit\" class=\"comment-form\">\r\n            <textarea\r\n            name=\"comment-field\"\r\n            class=\"comment-field\"\r\n            id=\"\"\r\n            cols=\"30\"\r\n            rows=\"10\"\r\n            placeholder=\"Add a comment...\"\r\n            ></textarea>\r\n        </form>\r\n\r\n        <img\r\n            class=\"avatar-typing\"\r\n            src=\"${this._data.image.png}\"\r\n            alt=\"photo of ${this._data.username}\"\r\n        />\r\n        <button class=\"btn btn-send\">Send</button>\r\n    </section>\r\n    `;\r\n  }\r\n\r\n  /*============================================ SEND BUTTON event listning and handling ========================== */\r\n\r\n  events(sendHandler, cId) {\r\n    this._textarea = document.querySelector(\".comment-field\");\r\n\r\n    // this is because we cannot select what doesnt exist..\r\n    this._btnSend = document.querySelector(\".btn-send\");\r\n\r\n    const handler = () => {\r\n      // console.log(\"clicked\");\r\n      if (!this._textarea.value) return;\r\n      sendHandler(this._textarea.value, cId);\r\n\r\n      this._textarea.value = null;\r\n    };\r\n\r\n    this._btnSend.removeEventListener(\"click\", handler);\r\n\r\n    // EVENT LSTNER FOR send-btn\r\n    this._btnSend.addEventListener(\"click\", handler);\r\n  }\r\n}\r\n\r\nexport const field = new CommentField();\r\n","const scoreUpdate = function (handler) {\r\n  window.addEventListener(\"click\", (e) => {\r\n    const target = e.target;\r\n    //   console.log(e.target);\r\n    if (!target.closest(\".btn-score\")) return;\r\n\r\n    const currentScore = +target.closest(\".score-container\").textContent.trim();\r\n\r\n    //   if (target.closest(\".plus\")) console.log(currentScore + 1);\r\n    const id = target.closest(\".comment-card\").id;\r\n\r\n    const newScore = handler(id, target.closest(\".plus\") ? true : false);\r\n\r\n    document.getElementById(id).querySelector(\".score\").textContent = newScore;\r\n    // console.log()\r\n  });\r\n};\r\n\r\nexport const scoreInit = function (handler) {\r\n  scoreUpdate(handler);\r\n};\r\n","import { View } from \"./view.js\";\r\n\r\n// const updateSec = `\r\n//             <section class=\"comment-update flex\">\r\n//                 <form action=\"submit\" class=\"comment-form\">\r\n//                     <textarea\r\n//                     name=\"comment-field\"\r\n//                     class=\"update-field\"\r\n//                     id=\"wetpussy\"\r\n//                     id=\"\"\r\n//                     cols=\"30\"\r\n//                     rows=\"10\"\r\n//                     ></textarea>\r\n//                 </form>\r\n\r\n//                 <button class=\"btn btn-update\">Update</button>\r\n//             </section>\r\n// `;\r\n// let value, toBeEditedCommentCardId;\r\n\r\n// const toggler = (target) => {\r\n//   document.querySelector(\".comment-update\")?.remove();\r\n//   target.closest(\".delete-edit-container\").classList.toggle(\"hidden\");\r\n// };\r\n\r\n// const editor = function (handler) {\r\n//   window.addEventListener(\"click\", (e) => {\r\n//     const target = e.target;\r\n\r\n//     // GUARDKEY\r\n//     if (target.closest(\".edit-container\")) {\r\n//       const toBeEditedCommentCard = target.closest(\".comment-card\");\r\n//       toBeEditedCommentCardId = toBeEditedCommentCard.dataset.id;\r\n\r\n//       // if some editing is ALREADY TAKING PLACE\r\n//       if (document.getElementById(\"wetpussy\")) {\r\n//         const wetpussy = document\r\n//           .getElementById(\"wetpussy\")\r\n//           .closest(\".comment-container\");\r\n//         const com = wetpussy.querySelector(\".comment\");\r\n\r\n//         com.textContent = value;\r\n//       }\r\n\r\n//       // REMOVING already placed comment update with previous value\r\n\r\n//       toggler(target);\r\n\r\n//       // getting the data from the state to insure CONTROLED DATA MOVEMENT\r\n//       const [content, replyingTo] = handler(toBeEditedCommentCardId);\r\n\r\n//       value = replyingTo ? \"@\" + replyingTo + \" \" + content : content;\r\n\r\n//       // Empitying the comment\r\n//       toBeEditedCommentCard.querySelector(\".comment\").textContent = \"\";\r\n\r\n//       // RENDERING the text Field\r\n//       toBeEditedCommentCard\r\n//         .querySelector(\".comment-container\")\r\n//         .insertAdjacentHTML(\"beforeend\", updateSec);\r\n\r\n//       //   filling the Field with the content we got\r\n//       document.getElementById(\"wetpussy\").value = handler(\r\n//         toBeEditedCommentCard\r\n//       );\r\n//     }\r\n\r\n//     if (target.classList.contains(\"btn-update\")) {\r\n//       // const content = value.trim().split(' ').shift().join(' ');\r\n//       // handler(toBeEditedCommentCardId, content );\r\n//       // target.closest('.comment-container').querySelector('.comment') = value;\r\n//       // target.closest('.comment-update').remove();\r\n//       if (!+toBeEditedCommentCardId) {\r\n//         const contentForReplies = value.trim().split(\" \");\r\n\r\n//         const replyingTo = contentForReplies.shift();\r\n//         const updatedcontent = handler(\r\n//           toBeEditedCommentCardId,\r\n//           contentForReplies.join(\" \")\r\n//         );\r\n\r\n//         document\r\n//           .getElementById(toBeEditedCommentCardId)\r\n//           .querySelector(\".comment\").textContent = updatedcontent;\r\n\r\n//         document\r\n//           .getElementById(toBeEditedCommentCardId)\r\n//           .querySelector(\".comment\")\r\n//           .insertAdjacentHTML(\r\n//             \"afterbegin\",\r\n//             `<span class='replying-to'>${replyingTo} </span>`\r\n//           );\r\n//       }\r\n\r\n//       // value = '';\r\n//       //   console.log(\"licked\");\r\n//     }\r\n//   });\r\n// };\r\n\r\n// export const edit = function (handler) {\r\n//   editor(handler);\r\n// };\r\n\r\nclass Edit extends View {\r\n  toBeEditedId;\r\n  toBeEditedcomment;\r\n  btnUpdate;\r\n  updateField;\r\n  _updateSection = `\r\n            <section class=\"comment-update flex\">\r\n                <form action=\"submit\" class=\"comment-form\">\r\n                    <textarea\r\n                    name=\"comment-field\"\r\n                    class=\"update-field\"\r\n                    id=\"wetpussy\"\r\n                    id=\"\"\r\n                    cols=\"30\"\r\n                    rows=\"10\"\r\n                    ></textarea>\r\n                </form>\r\n\r\n                <button class=\"btn btn-update\">Update</button>\r\n            </section>\r\n`;\r\n\r\n  render(btnUpdate = false) {\r\n    // render UPDATE-SECTION\r\n    this.parentSet(this.toBeEditedId);\r\n    if (!btnUpdate) {\r\n      // EMPITYING the comment\r\n      this.toBeEditedcomment.textContent = \"\";\r\n\r\n      // removing comment field\r\n      document.querySelector(\".section-comment-send\").remove();\r\n\r\n      // RENDERING section update\r\n      this._parentElement\r\n        .querySelector(\".comment-container\")\r\n        .insertAdjacentHTML(\"beforeend\", this._updateSection);\r\n\r\n      // setting the update Field\r\n      this.updateField = document.getElementById(\"wetpussy\");\r\n\r\n      // FILLING the updatecommentSection with the previous COMMENT\r\n      this.updateField.value = this._data.content;\r\n    }\r\n    // render UPDATED content\r\n    if (btnUpdate) {\r\n      this.updateField.closest(\".comment-update\").remove();\r\n\r\n      // setting THE COMMENT TO ITS PREVIOUS VALUE\r\n      this.toBeEditedcomment.insertAdjacentHTML(\r\n        \"beforeend\",\r\n        this._generateMarkup()\r\n      );\r\n\r\n      this._parentElement\r\n        .querySelector(\".delete-edit-container\")\r\n        .classList.remove(\"hidden\");\r\n    }\r\n  }\r\n\r\n  _generateMarkup() {\r\n    return `\r\n    ${\r\n      this._data.replyingTo\r\n        ? \"<span class='replying-to'>@\" +\r\n          this._data.replyingTo +\r\n          \"</span> \" +\r\n          this._data.content\r\n        : this._data.content\r\n    }\r\n    `;\r\n  }\r\n\r\n  events(handler) {\r\n    // UPDATE HANDLER\r\n    const btnUpdateHandler = (e) => {\r\n      // console.log(\"clicked update\");\r\n\r\n      this._data.content = handler(this.toBeEditedId, this.updateField.value);\r\n\r\n      this.render(true);\r\n    };\r\n\r\n    // EDIT HANDLER\r\n    const editHandler = (e) => {\r\n      const target = e.target;\r\n\r\n      if (!target.closest(\".edit-container\")) return;\r\n\r\n      // CHECKING if another editing is happening and removing appropriately\r\n      if (this.updateField) {\r\n        this.updateField.closest(\".comment-update\").remove();\r\n\r\n        // setting THE COMMENT TO ITS PREVIOUS VALUE\r\n        this.toBeEditedcomment.textContent = this._data.replyingTo\r\n          ? \"<span class='replying-to'>@\" +\r\n            this._data.replyingTo +\r\n            \"</span> \" +\r\n            this._data.content\r\n          : this._data.content;\r\n      }\r\n\r\n      // retriving the id of the TOBE EDITED comment card\r\n      this.toBeEditedId = target.closest(\".comment-card\").dataset.id;\r\n\r\n      // getting the toBeEdited comment element\r\n      this.toBeEditedcomment = document\r\n        .getElementById(this.toBeEditedId)\r\n        .querySelector(\".comment\");\r\n\r\n      target.closest(\".delete-edit-container\").classList.add(\"hidden\");\r\n\r\n      // geting the current content of the comment\r\n      this._data = handler(this.toBeEditedId);\r\n\r\n      this.render();\r\n\r\n      // removing if there is already btnUpdateListner\r\n      this.btnUpdate?.removeEventListener(\"click\", btnUpdateHandler);\r\n\r\n      // SELECTING btn-update\r\n      this.btnUpdate = document.querySelector(\".btn-update\");\r\n\r\n      // adding EVENTlISTNER TO BTN-UPDATE\r\n      this.btnUpdate.addEventListener(\"click\", btnUpdateHandler);\r\n    };\r\n\r\n    // REMOVINGeventListner for windows with this handler if any\r\n    window.removeEventListener(\"click\", editHandler);\r\n\r\n    // Listninig to CLLICK event to handle edit\r\n    window.addEventListener(\"click\", editHandler);\r\n  }\r\n\r\n  init(handler) {\r\n    this.events(handler);\r\n  }\r\n}\r\n\r\nexport const edit = new Edit();\r\n","const rootC = document.body;\r\nlet toBeDeletedCommentId;\r\nconst popupConta = `\r\n        <div class=\"delete-popup\">\r\n            <div class=\"overlay\"></div>\r\n            <div class=\"popup-card flex\">\r\n            <p class=\"popup-header\">Delete comment</p>\r\n            <p>\r\n                Are you sure you want to delete this comment? This will remove the comment\r\n                and it can't be undone.\r\n            </p>\r\n            <footer class=\"popup-footer flex\">\r\n                <button class=\"btn-cancel btn\">no, cancel</button>\r\n                <button class=\"btn-yes btn\">yes, delete</button>\r\n            </footer>\r\n            </div>\r\n        </div>\r\n`;\r\n\r\nexport const deleteComment = function (deleteHandler) {\r\n  const overlayHandle = (e) => {\r\n    //   DELLETING\r\n    if (e.target.classList.contains(\"btn-yes\")) {\r\n      deleteHandler(toBeDeletedCommentId);\r\n\r\n      document.getElementById(toBeDeletedCommentId).remove();\r\n      document.querySelector(\".delete-popup\").remove();\r\n    }\r\n\r\n    // CANCELLING\r\n    if (\r\n      e.target.classList.contains(\"btn-cancel\") ||\r\n      e.target.classList.contains(\"overlay\")\r\n    ) {\r\n      //   document.getElementById(commentId).remove();\r\n      console.log(\"click\");\r\n      document.querySelector(\".delete-popup\").remove();\r\n    }\r\n  };\r\n\r\n  const overlayPass = (e) => {\r\n    overlayHandle(e, this);\r\n  };\r\n\r\n  const handleDe = function (e) {\r\n    if (!e.target.closest(\".delete-container\")) return;\r\n    toBeDeletedCommentId = e.target.closest(\".comment-card\").dataset.id;\r\n\r\n    // RENDERING the popup\r\n    rootC.insertAdjacentHTML(\"beforeend\", popupConta);\r\n\r\n    // REMOVING event listner if any\r\n    rootC.removeEventListener(\"click\", overlayPass);\r\n\r\n    // ATTACHING eventListner\r\n    rootC.addEventListener(\"click\", overlayPass);\r\n\r\n    // deleteHandler(toBeDeletedCommentId.dataset.id);\r\n  };\r\n\r\n  window.addEventListener(\"click\", handleDe);\r\n};\r\n","import * as model from \"./src/model.js\";\r\nimport post from \"./src/commentView.js\";\r\nimport { field } from \"./src/commentField.js\";\r\nimport { scoreInit } from \"./src/scoreUpdate.js\";\r\nimport { reply } from \"./src/reply.js\";\r\nimport { edit } from \"./src/edit.js\";\r\nimport { deleteComment } from \"./src/deleteComment.js\";\r\n\r\nconst state = model.state;\r\n\r\nconst commentRenderer = function ({ comment, RCid, replied = false, current }) {\r\n  // if (RCid) post.render(comment, RCid);\r\n  // else post.render(comment);\r\n  const byCurrent = current ? current : replied;\r\n  post.render(comment, RCid, replied, byCurrent);\r\n};\r\n\r\n/*======================================================== SEND-HANDLER =============================================*/\r\n\r\nconst sendHandler = function (content, idReplyingTo, inReplied) {\r\n  const comment = {\r\n    content: content,\r\n    createdAt: new Date().getDay(),\r\n    score: 0,\r\n    user: model.state.currentUser,\r\n  };\r\n\r\n  if (idReplyingTo) {\r\n    const parentCommentId = parseInt(idReplyingTo);\r\n\r\n    const commentReplyTo = model.dataProvide(parentCommentId);\r\n\r\n    if (!+idReplyingTo) {\r\n      const replyingTo = model.dataProvide(idReplyingTo).user.username;\r\n\r\n      // console.log(replyingTo);\r\n      comment.replyingTo = replyingTo;\r\n    }\r\n\r\n    if (+idReplyingTo) {\r\n      // GETTIN USER NAME\r\n      const replyingTo = commentReplyTo.user.username;\r\n\r\n      // setting USERNAME\r\n      comment.replyingTo = replyingTo;\r\n    }\r\n\r\n    // creating new EXTENSION ID\r\n    const newExtensionId = new Date().getTime();\r\n\r\n    // the id of the  new replied comment\r\n    comment.id = parentCommentId + \"-\" + newExtensionId;\r\n\r\n    model.dataPush(comment, comment.id);\r\n\r\n    const argumentsObj = {\r\n      RCid: parentCommentId + \"RC\",\r\n      replied: true,\r\n      comment: comment,\r\n    };\r\n    commentRenderer(argumentsObj);\r\n    // console.log(parentCommentId + \"rc\");\r\n  } else {\r\n    comment.id = new Date().getTime();\r\n    comment.replies = [];\r\n    // console.log(comment.id)\r\n    // model.state.comments.push(comment);\r\n\r\n    model.dataPush(comment, comment.id);\r\n    commentRenderer({ comment: comment, current: true });\r\n  }\r\n\r\n  field.render(model.state.currentUser, null, sendHandler);\r\n};\r\n\r\n// ============================================================= SCORE HANDLER ======================================\r\nconst scoreHandler = function (id, add) {\r\n  const score = model.scoreUpdate(id, add);\r\n\r\n  return score;\r\n};\r\n\r\n/*=================================================== REPLY Handler ======================================== */\r\nconst replyChecker = function (isRepliedContainer, commentId) {\r\n  const rcIdcId = parseInt(commentId) + \"RCto\" + commentId;\r\n\r\n  if (!isRepliedContainer) {\r\n    // checking whether the comment already have a container when clicked\r\n    const alreadyHaveReplies = model.dataProvide(commentId).replies.length > 0;\r\n\r\n    // console.log(alreadyHaveReplies);\r\n    // commentId because the field will create the replies  container and render it with the id of commentID + RC\r\n    field.render(\r\n      model.state.currentUser,\r\n      rcIdcId,\r\n      sendHandler,\r\n      alreadyHaveReplies\r\n    );\r\n\r\n    return alreadyHaveReplies;\r\n  } else {\r\n    // console.log(parseInt(rcId));\r\n    field.render(model.state.currentUser, rcIdcId, sendHandler);\r\n  }\r\n  // return false;\r\n};\r\n\r\n/*================================================= Edit handler ==========================================*/\r\nconst editHandler = function (id, content) {\r\n  // console.log(\"clicked\");\r\n  // const idP = parseInt(id);\r\n\r\n  const toBeEditedComment = model.dataProvide(id);\r\n  if (!content) {\r\n    if (!+id)\r\n      return {\r\n        content: toBeEditedComment.content,\r\n        replyingTo: toBeEditedComment.replyingTo,\r\n      };\r\n\r\n    return { content: toBeEditedComment.content };\r\n  }\r\n\r\n  field.render(model.state.currentUser, null, sendHandler);\r\n\r\n  return model.contentUpdate(id, content);\r\n};\r\n\r\n/*================================================ DELETE-handler =========================================*/\r\nconst deleteHandler = function (id) {\r\n  model.deleteComment(id);\r\n};\r\n\r\nconst init = function () {\r\n  // initialCommentRenderer();\r\n  post.init(model.state.comments);\r\n  field.render(model.state.currentUser, null, sendHandler);\r\n  scoreInit(scoreHandler);\r\n  reply(replyChecker);\r\n  edit.init(editHandler);\r\n  deleteComment(deleteHandler);\r\n};\r\n\r\ninit();\r\n","export const reply = function (handler) {\r\n  const replyHandler = (e) => {\r\n    // console.log(\"cl\");\r\n    // GUARD KEY\r\n    if (!e.target.closest(\".reply-container\")) return;\r\n\r\n    const target = e.target;\r\n    const commentCardId = target.closest(\".comment-card\").dataset.id;\r\n\r\n    // this checks whether the Reply btn is clicked from the comment card inside a comment replied container or not\r\n    if (!target.closest(\".replied-container\")) {\r\n      handler(false, commentCardId);\r\n    } else {\r\n      handler(true, commentCardId);\r\n    }\r\n  };\r\n\r\n  window.addEventListener(\"click\", replyHandler);\r\n};\r\n"],"names":["$d7fcaaa29d0ffaa7$export$ca000e230c0caa3e","currentUser","image","png","webp","username","comments","id","content","createdAt","score","user","replies","replyingTo","$d7fcaaa29d0ffaa7$var$persistState","localStorage","setItem","JSON","stringify","$d7fcaaa29d0ffaa7$export$838a848b241b0e52","array","findIndex","el","$d7fcaaa29d0ffaa7$export$8061f5bb173b63ed","idP","parseInt","indP","indR","$d7fcaaa29d0ffaa7$export$4c72bd56b0c2746f","data","push","newState","parse","getItem","$d7fcaaa29d0ffaa7$var$init","$467972dd7b1d4dab$export$27a5bd065ad55220","_data","_parentElement","render","parentElId","byCurret","this","markup","_generateMarkup","parentSet","insertAdjacentHTML","thisComment","document","getElementById","deleteEditConta","querySelector","setTimeout","remove","reply","length","repliedContainerSetter","forEach","deleteEdit","_btnSend","rcIdcId","sendHandler","haveReplies","cId","split","commentFieldContainer","rc","createElement","classList","add","dataset","after","lastElementChild","scrollIntoView","behavior","parentElement","contains","nullConta","events","$72ba828d943c76a1$export$8f9b7836e0f9c7ce","handler","window","addEventListener","e","target","closest","textContent","trim","newScore","$72ba828d943c76a1$var$scoreUpdate","toBeEditedId","toBeEditedcomment","btnUpdate","updateField","_updateSection","value","btnUpdateHandler","editHandler","$90dcbe21a6927bad$var$rootC","body","$90dcbe21a6927bad$var$toBeDeletedCommentId","$90dcbe21a6927bad$export$2e6e3ad634e3776","deleteHandler","overlayPass","console","log","$dad545c909cfec2d$var$commentRenderer","comment","RCid","replied","current","byCurrent","$13d417f5ca4b9e09$export$2e2bcd8739ae039","$dad545c909cfec2d$var$sendHandler","idReplyingTo","inReplied","Date","getDay","parentCommentId","commentReplyTo","newExtensionId","getTime","$ecedc850a57561e5$export$e0f35d825088c098","$dad545c909cfec2d$var$scoreHandler","parentIndex","repliesIndex","$d7fcaaa29d0ffaa7$export$d57195ee8234c9dd","$dad545c909cfec2d$var$replyChecker","isRepliedContainer","commentId","alreadyHaveReplies","$dad545c909cfec2d$var$editHandler","toBeEditedComment","$d7fcaaa29d0ffaa7$export$1e6624d9d7cdcd51","$dad545c909cfec2d$var$deleteHandler","splice","$d7fcaaa29d0ffaa7$export$2e6e3ad634e3776","init","commentCardId","$aa098f74b2874271$export$e1a8e267487c59d1"],"version":3,"file":"index.5daf1531.js.map"}